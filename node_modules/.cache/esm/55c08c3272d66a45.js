let cors,path,express,success,error,PORT,imagesRoutes;_72d‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_72d‍.w("path",[["default",["path"],function(v){path=v}]]);_72d‍.w("express",[["default",["express"],function(v){express=v}]]);_72d‍.w("consola",[["success",["success"],function(v){success=v}],["error",["error"],function(v){error=v}]]);_72d‍.w("./config",[["PORT",["PORT"],function(v){PORT=v}]]);_72d‍.w("./routes/images",[["default",["imagesRoutes"],function(v){imagesRoutes=v}]]);






// import Routes


// Initialize the express application
const app = express();

// Inject the middlewares to our app Object
app.use(cors());
app.use(express.json());

// Injecting routes in main app
app.use('/api/images', imagesRoutes);


// Setting up the express static directory
app.use(express.static(path.join(__dirname, './public')));

// Starting Application function
const startApp = () => {
    app.listen(PORT, () => success({ badge: true, message: `Server started on port ${PORT}` }));
};

startApp();
